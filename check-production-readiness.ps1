# Script para verificar prepara√ß√£o para produ√ß√£o do Smart Menu Mobile

Write-Host "üîç Verificando prepara√ß√£o para produ√ß√£o..." -ForegroundColor Cyan
Write-Host "=" * 60

# Verificar se o logger foi implementado
Write-Host "üìù Verificando sistema de logging..." -ForegroundColor Yellow
if (Test-Path "src/utils/logger.ts") {
    Write-Host "‚úÖ Logger implementado" -ForegroundColor Green
} else {
    Write-Host "‚ùå Logger n√£o encontrado" -ForegroundColor Red
}

# Verificar configura√ß√£o do Restaurant ID
Write-Host "üçΩÔ∏è Verificando Restaurant ID..." -ForegroundColor Yellow
$appConfig = Get-Content "src/config/app-config.ts" -Raw
if ($appConfig -match "4a94dbcc-b9b7-470c-9a47-c61062f66579") {
    Write-Host "‚ö†Ô∏è Restaurant ID ainda √© o exemplo - CONFIGURAR UUID REAL" -ForegroundColor Yellow
} else {
    Write-Host "‚úÖ Restaurant ID configurado" -ForegroundColor Green
}

# Verificar Bundle ID
Write-Host "üì¶ Verificando Bundle ID..." -ForegroundColor Yellow
$appJson = Get-Content "app.json" -Raw
if ($appJson -match "com\.yourcompany\.smartmenumobile") {
    Write-Host "‚ö†Ô∏è Bundle ID ainda √© gen√©rico - CONFIGURAR ID √öNICO" -ForegroundColor Yellow
} else {
    Write-Host "‚úÖ Bundle ID configurado" -ForegroundColor Green
}

# Verificar se bot√µes de teste est√£o ocultos
Write-Host "üß™ Verificando bot√µes de teste..." -ForegroundColor Yellow
$reservationScreen = Get-Content "src/pages/reservations/ReservationScreen.tsx" -Raw
if ($reservationScreen -match "Teste de Notifica√ß√µes.*COMENTADA") {
    Write-Host "‚úÖ Bot√µes de teste ocultos" -ForegroundColor Green
} else {
    Write-Host "‚ùå Bot√µes de teste ainda vis√≠veis" -ForegroundColor Red
}

# Verificar configura√ß√µes de produ√ß√£o
Write-Host "‚öôÔ∏è Verificando configura√ß√µes de produ√ß√£o..." -ForegroundColor Yellow
if ($appConfig -match "enableTestButtons: false" -and $appConfig -match "enableDebugLogs: false") {
    Write-Host "‚úÖ Configura√ß√µes de produ√ß√£o ativadas" -ForegroundColor Green
} else {
    Write-Host "‚ùå Configura√ß√µes de produ√ß√£o n√£o ativadas" -ForegroundColor Red
}

# Verificar timeout no axios
Write-Host "üåê Verificando timeout de rede..." -ForegroundColor Yellow
$axiosConfig = Get-Content "src/lib/axios.ts" -Raw
if ($axiosConfig -match "timeout: 10000") {
    Write-Host "‚úÖ Timeout configurado" -ForegroundColor Green
} else {
    Write-Host "‚ùå Timeout n√£o configurado" -ForegroundColor Red
}

# Verificar √≠cone de notifica√ß√£o
Write-Host "üîî Verificando √≠cone de notifica√ß√£o..." -ForegroundColor Yellow
if (Test-Path "assets/notification-icon.png") {
    Write-Host "‚úÖ √çcone de notifica√ß√£o presente" -ForegroundColor Green
} else {
    Write-Host "‚ùå √çcone de notifica√ß√£o n√£o encontrado" -ForegroundColor Red
}

# Verificar .gitignore
Write-Host "üìÅ Verificando .gitignore..." -ForegroundColor Yellow
$gitignore = Get-Content ".gitignore" -Raw
if ($gitignore -match "android/" -and $gitignore -match "ios/") {
    Write-Host "‚úÖ Pastas nativas no .gitignore" -ForegroundColor Green
} else {
    Write-Host "‚ùå Pastas nativas n√£o est√£o no .gitignore" -ForegroundColor Red
}

Write-Host "=" * 60
Write-Host "üìã Resumo da verifica√ß√£o:" -ForegroundColor Cyan

# Contar problemas
$issues = 0
if (-not (Test-Path "src/utils/logger.ts")) { $issues++ }
if ($appConfig -match "4a94dbcc-b9b7-470c-9a47-c61062f66579") { $issues++ }
if ($appJson -match "com\.yourcompany\.smartmenumobile") { $issues++ }
if (-not ($reservationScreen -match "Teste de Notifica√ß√µes.*COMENTADA")) { $issues++ }
if (-not ($appConfig -match "enableTestButtons: false")) { $issues++ }
if (-not ($axiosConfig -match "timeout: 10000")) { $issues++ }
if (-not (Test-Path "assets/notification-icon.png")) { $issues++ }
if (-not ($gitignore -match "android/")) { $issues++ }

if ($issues -eq 0) {
    Write-Host "üéâ PROJETO PRONTO PARA PRODU√á√ÉO!" -ForegroundColor Green
    Write-Host "‚úÖ Todos os itens verificados est√£o corretos" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è $issues problema(s) encontrado(s)" -ForegroundColor Yellow
    Write-Host "üîß Corrija os problemas antes de gerar o build de produ√ß√£o" -ForegroundColor Yellow
}

Write-Host "=" * 60
Write-Host "üìñ Para mais detalhes, consulte: docs/production-readiness-report.md" -ForegroundColor Cyan 